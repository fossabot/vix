name: Build
on: [push, pull_request]
jobs:
  sonar:
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.7.0.2747
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          submodules: recursive
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} 
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
      - name: install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install nasm gcc-multilib g++-multilib xorriso grub-common mtools llvm-dev libclang-dev clang python3
        #curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        #rustup default stable-x86_64-unknown-linux-gnu
        #cargo install bindgen-cli  --force
        #cd $GITHUB_WORKSPACE && rustup override set stable-i686-unknown-linux-gnu
      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make clean all MAKE_ARCH=x86
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install nasm gcc-multilib g++-multilib xorriso grub-common mtools qemu-system-x86 llvm-dev libclang-dev clang python3
        #curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        #rustup default stable-x86_64-unknown-linux-gnu
        #cargo install bindgen-cli --force
        #cd $GITHUB_WORKSPACE && rustup override set stable-i686-unknown-linux-gnu
      - name: compile
        run: cd $GITHUB_WORKSPACE && make MAKE_ARCH=x86

      - name: run
        run: |
          wget https://gist.githubusercontent.com/theverygaming/ea45ead0700c7b3c28db89e94f74abf8/raw/exitforce0.cpp
          g++ exitforce0.cpp -o exitforce0
          cd $GITHUB_WORKSPACE && ./exitforce0 timeout 30 qemu-system-x86_64 shitOS.iso -nographic

      - name: upload image
        uses:  actions/upload-artifact@v2
        with:
            name: image
            path: ${{runner.workspace}}/shitOS/shitOS.iso
