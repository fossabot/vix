menu "Memory Management"

config KHEAP_BUMP
    bool "Use simple bump allocator for the kernel heap"
    help
        The bump allocator is unable to free memory in literally 100% of cases (it doesnt support freeing memory).
        This means it is very inefficient in terms of memory usage.
        But due to its simplicity it is quite fast.

        Generally used for debugging, the other heap allocator is more prone to issues.
    default n

choice
	prompt "kernel heap allocation"
    depends on !KHEAP_BUMP
	default KHEAP_BEST_SIZE
	config KHEAP_FIRST_FIT
		bool "first-fit"
        help
            Will allocate the first free block found that is big enough.
            Fast but may waste memory.
	config KHEAP_BEST_SIZE
		bool "best size"
        help
            Will search for the block that is the closest to the wanted size. 
            Allocation is slower but saves more memory.
endchoice

config KFREE_CLEANUP
    bool "Enable kfree cleanup"
    depends on !KHEAP_BUMP
    help
        A cleanup frees physical memory and makes it available to the whole system again.
        Cleanups cause fragmentation which will make overall allocations slower.
    default y

config KFREE_CLEANUP_INTERVAL
	prompt "kfree cleanup interval"
    depends on KFREE_CLEANUP && !KHEAP_BUMP
	int
    default 5
	range 1 200
    help
        kfree will clean up every KFREE_CLEANUP_INTERVAL times it gets called.
        A cleanup frees physical memory.
        Bigger value -> less efficient memory usage but kfree runs faster.

config ENABLE_MEMMAP_SANITIZE
    bool "Enable Memory map Sanitization"
    default y

config MEMMAP_MAX_ENTRIES
	prompt "maximum amount of entries in memory map"
	int
	default 50
	range 1 256
        
endmenu
