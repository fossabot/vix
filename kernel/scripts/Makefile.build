INT_CC := $(CC)
INT_CXX := $(CXX)
INT_LD := $(LD)
INT_NM := $(NM)
INT_OBJCOPY := $(OBJCOPY)
INT_CFLAGS := $(CFLAGS)
INT_CXXFLAGS := $(CXXFLAGS)
INT_LDFLAGS := $(LDFLAGS)

override INT_CFLAGS += -I arch/$(BUILD_ARCH)/include -I stdlibs/libc/include -I stdlibs/libcxx/include -I include -O$(CXX_OPTIM_LEVEL) -std=c11 -Wall -Wextra -Wpedantic -Wno-unused-parameter -Werror=return-type -g
override INT_CXXFLAGS += -I arch/$(BUILD_ARCH)/include -I stdlibs/libc/include -I stdlibs/libcxx/include -I include -O$(CXX_OPTIM_LEVEL) -std=c++20 -Wall -Wextra -Wpedantic -Wno-unused-parameter -Werror=return-type -g

%.oc: %.c
	@echo "  CC $<"
	@$(INT_CC) $(INT_CFLAGS) -c $< -o $@

%.ocpp: %.cpp
	@echo "  CXX $<"
	@$(INT_CXX) $(INT_CXXFLAGS) -c $< -o $@

%.oS: %.S
	@echo "  AS $<"
	@$(INT_CXX) $(INT_CXXFLAGS) -c $< -o $@

RUST_TARGET := i686-unknown-linux-gnu

%.oarsc:
	@#FIXME: get rid of the copy, stupid
	@cd $(dir $@) && cargo build --release --target $(RUST_TARGET)
	@cp $(dir $@)target/$(RUST_TARGET)/release/$(basename $(notdir $@)).a $@

%.ors: %.rs
	@#TODO: -Zcrate-attr=no_std
	@echo "  RS $<"
	rustc \
	  --extern kernel \
	  --target $(RUST_TARGET) \
	  -L $(objtree)/rust/ \
	  -Cpanic=abort \
	  --emit=obj \
	  --crate-type rlib \
	  --crate-name $(basename $(notdir $@)) \
	  $< -o $@

ifeq ($(CONFIG_UBSAN), y)
override INT_CFLAGS += -fsanitize=undefined -fno-strict-overflow
override INT_CXXFLAGS += -fsanitize=undefined -fno-strict-overflow
endif
