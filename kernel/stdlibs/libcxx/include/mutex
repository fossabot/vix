#pragma once
#include <vix/panic.h>

namespace std {
    class mutex {
    public:
        void lock() {
            while (__sync_lock_test_and_set(&_lock, 1)) {}
        }

        bool try_lock() {
            return !__sync_lock_test_and_set(&_lock, 1);
        }

        void unlock() {
            __sync_lock_release(&_lock);
        }

    private:
        volatile int _lock = 0;
    };
}
